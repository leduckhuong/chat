const langOptions = $('.language-option');
const langIcon = $('.language-icon');
const langsMenu = $('#languages');
const overlayLangs = $('#overlayLangs');

const langs = [
    {
        name: 'Vietnamese',
        code: 'vn'
    },
    {
        name: 'English',
        code: 'en'
    }
];

const getCookie = (cname) => {
    let name = cname + "=";
    let decodedCookie = decodeURIComponent(document.cookie);
    let ca = decodedCookie.split(';');
    for(let i = 0; i <ca.length; i++) {
      let c = ca[i];
      while (c.charAt(0) == ' ') {
        c = c.substring(1);
      }
      if (c.indexOf(name) == 0) {
        return c.substring(name.length, c.length);
      }
    }
    return "";
};

const userLang = getCookie("userLang");

const updateLangIcon = (code, src) => {
    const lang = langs.find(la => la.code === code);
    const html = `<div class="w-8 h-8 mr-1" style="background: url('${src}') top center / cover no-repeat;"></div>${lang.code}`;
    langIcon.html(html);
};

const updateLang = (code) => {
    document.cookie = `userLang=${code};path=/;SameSite=Lax`;
};

const checkLang = (code) => {
    return langs.some(lang => lang['code']===code)
};

const toggleLangsMenu = () => {
    langsMenu.toggleClass('hidden');
    overlayLangs.toggleClass('hidden');
};

langOptions.each((index, lang) => {
    $(lang).on('click',() => {
        const src = lang.firstElementChild.currentSrc;
        const code = $(lang).data('code');
        if(userLang!==code) {
            updateLangIcon(code, src);
            updateLang(code);
            setTimeout(() => {
                location.reload();
            }, 500);
        }
        toggleLangsMenu();
    });
});

langIcon.click(toggleLangsMenu);

overlayLangs.click(toggleLangsMenu);
